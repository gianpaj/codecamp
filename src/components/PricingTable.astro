---
import { getLangFromUrl, useTranslations } from "@i18n/utils";
import PricingFeature from "./PricingFeature.astro";

const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);

import "./PricingTable.css";

const plans = [
  {
    title: t("pricingtable.plan1.title"),
    price: 39,
    priceDescription: t("pricingtable.plan1.priceDescription"),
    link: "https://cal.com/escuela",
    buttonText: t("pricingtable.plan1.buttonText"),
    features: [
      {
        title: t("pricingtable.feature.online"),
        isAvailable: true,
      },
      {
        title: t("pricingtable.feature.inPerson"),
        isAvailable: true,
      },
      {
        title: t("pricingtable.feature.session"),
        isAvailable: true,
      },
    ],
  },
  {
    title: t("pricingtable.plan2.title"),
    price: 340,
    priceDescription: t("pricingtable.plan2.priceDescription"),
    link: "https://cal.com/escuela",
    buttonText: t("pricingtable.plan2.buttonText"),
    features: [
      {
        title: t("pricingtable.feature.online"),
        isAvailable: false,
      },
      {
        title: t("pricingtable.feature.inPerson"),
        isAvailable: true,
      },
      {
        title: t("pricingtable.feature.session"),
        isAvailable: true,
      },
      {
        title: t("pricingtable.plan2.feature.people"),
        isAvailable: true,
      },
      {
        title: t("pricingtable.plan2.feature.course"),
        isAvailable: true,
      },
    ],
  },
  {
    title: t("pricingtable.plan3.title"),
    priceDescription: t("pricingtable.plan3.priceDescription"),
    link: "https://cal.com/escuela",
    buttonText: t("pricingtable.plan3.buttonText"),
    features: [
      {
        title: t("pricingtable.feature.online"),
        isAvailable: true,
      },
      {
        title: t("pricingtable.feature.inPerson"),
        isAvailable: true,
      },
      {
        title: t("pricingtable.plan3.feature.time"),
        isAvailable: true,
      },
      {
        title: t("pricingtable.plan3.feature.lunch"),
        isAvailable: true,
      },
    ],
  },
];
---

<div class="mx-auto max-w-screen-xl px-4 py-8 font-sans lg:px-6 lg:py-16">
  <div
    class="grid space-y-8 sm:gap-6 md:grid-cols-2 lg:grid-cols-3 lg:space-y-0 xl:gap-10"
  >
    {
      plans.map((plan) => (
        <div
          key={plan.title}
          class="plan-item z-10 w-full max-w-sm rounded-lg border border-gray-200 bg-white p-4 shadow dark:border-gray-700 dark:bg-gray-800 sm:p-8"
        >
          <h5 class="mb-4 text-xl font-medium text-gray-500 dark:text-gray-400">
            {plan.title}
          </h5>
          <div class="mb-4 flex items-baseline text-gray-900 dark:text-white sm:mb-0 sm:h-[100px]">
            <span class="whitespace-pre-line text-3xl font-semibold">
              {plan.price ? (
                <>&euro;</>
              ) : (
                plan.priceDescription && <>{plan.priceDescription}</>
              )}
            </span>
            <span class="text-5xl font-extrabold tracking-tight">
              {plan.price}
            </span>
            {plan.price && plan.priceDescription && (
              <span class="text-l ml-1 whitespace-pre-line font-normal text-gray-500 dark:text-gray-400 sm:text-xl">
                {plan.priceDescription}
              </span>
            )}
          </div>
          <a
            href={plan.link.includes("@") ? `mailto:${plan.link}` : plan.link}
            class="button gradient-border dark:text-white"
          >
            {plan.buttonText}
          </a>
          {/* {renderFeatures(plan.features)} */}
          <PricingFeature features={plan.features} />
        </div>
      ))
    }
  </div>
</div>
